; This is YOU. DMARC reports include information about the reports. Enter it here.
[organization]
domain             = example.com
org_name           = My Great Company
email              = noreply@example.com
extra_contact_info = http://www.example.com/dmarc-policy/

; aggregate DMARC reports need to be stored somewhere. Any database
; with a DBI module (MySQL, SQLite, DBD, etc.) should work.
; SQLite, MySQL and Postgresql are supported.
; Default is sqlite.
[report_store]
backend = SQL
dsn     = dbi:SQLite:dbname=dmarc_reports.sqlite
;dsn    = dbi:mysql:database=dmarc_report;host=db;port=3306
;dsn    = dbi:Pg:database=dmarc_report;port=5432
user    =
pass    =
; when validating DMARC messages, reports are not saved by default. This
; enables 'save by default'
auto_save = 0

; Sign outgoing report emails with DKIM
; Options match those which would be passed
; to Mail::DKIM::Signer
[report_sign]
algorithm   = rsa-sha1
method      = relaxed
domain      = signer.example.com
selector    = dkim
keyfile     = /path/to/private.key

[report_sending]
; minimum reporting interval in seconds: default: none
; min_interval = 3600
;
; maximum reporting interval in seconds: default: none
; max_interval = 86400

; backend can be perl or libopendmarc
[dmarc]
backend        = perl

[dns]
timeout            = 5
public_suffix_list = share/public_suffix_list

[smtp]
; hostname is the external FQDN of this MTA
hostname  = mail.example.com
cc        = set.this@for.a.while.example.com

; list IP addresses to whitelist (bypass DMARC reject/quarantine)
; see sample whitelist in share/dmarc_whitelist
whitelist = /path/to/etc/dmarc_whitelist

; By default, we attempt to email directly to the report recipient.
; Set these to relay via a SMTP smart host.
smarthost =
smartuser =
smartpass =

[imap]
server    = mail.example.com
user      =
pass      =
; the imap folder where new dmarc messages will be found
folder    = dmarc
; the folders to store processed reports (a=aggregate, f=forensic)
f_done    = dmarc.forensic
a_done    = dmarc.aggregate

[http]
port      = 8080

[https]
port      = 8443
ssl_crt   =
ssl_key   =

